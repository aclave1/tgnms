//
// Autogenerated by Thrift Compiler
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var ttypes = module.exports = {};
ControllerStatus = module.exports.ControllerStatus = function(args) {
  this.network_name = null;
  this.controller_alive = null;
  if (args) {
    if (args.network_name !== undefined) {
      this.network_name = args.network_name;
    }
    if (args.controller_alive !== undefined) {
      this.controller_alive = args.controller_alive;
    }
  }
};
ControllerStatus.prototype = {};
ControllerStatus.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.network_name = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.BOOL) {
        this.controller_alive = input.readBool();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ControllerStatus.prototype.write = function(output) {
  output.writeStructBegin('ControllerStatus');
  if (this.network_name !== null && this.network_name !== undefined) {
    output.writeFieldBegin('network_name', Thrift.Type.STRING, 1);
    output.writeString(this.network_name);
    output.writeFieldEnd();
  }
  if (this.controller_alive !== null && this.controller_alive !== undefined) {
    output.writeFieldBegin('controller_alive', Thrift.Type.BOOL, 2);
    output.writeBool(this.controller_alive);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

