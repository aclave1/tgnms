# kubernetes_user: centos
# ansible_python_interpreter: python2
# pip_package: python2-pip

kubernetes_user: ubuntu
ansible_python_interpreter: python3
pip_package: python3-pip

# pod_network_cidr: 192.168.120.0/24
pod_network_cidr_ipv4: 192.168.120.0/24
pod_network_cidr: 192.168.120.0/24
# pod_network_cidr_ipv6: fd00::/120
kube_version: v1.18.5

zookeeper_replicas: 3

# Additional feature to install
additional_features:
  helm: true
  metallb: false
  healthcheck: false

msa_services:
  - name: topology_service
    uses_database: true
    db_password: 6789
    command: "alembic upgrade head && topology_service"
  - name: network_test
    uses_database: true
    db_password: 6789
    command: "alembic upgrade head && network_test"
  - name: default_routes_service
    uses_database: true
    db_password: 6789
    command: "alembic upgrade head && default_routes_service"
  - name: analytics
    uses_database: false
    command: "analytics"
  - name: weather_service
    uses_database: false
    command: "weather_service"

single_node: true

nms_username: admin
nms_password: null
nms_software_portal_api_id: null
nms_software_portal_api_key: null
ansible_user: root
docker_user: root
ext_nms_hostname: ubuntu18-04
certbot_user_email: ''
certbot_args: --staging
terragraph_docker_path: /opt/terragraph
controllers_list:
- name: dev_example_first
  ctrlr_port: '7007'
  agg_port: '8002'
  app_port: '17077'
  bt_seeder_port: '6881'
use_kubernetes: true
e2e_image: secure.cxl-terragraph.com:443/e2e-controller:latest
weather_service:
  enabled: true
  provider: climacell
  api_key: 96FCwiIEwcRVDqDKVa8CRbKS4eYZhC3m
dev_mode: false
ansible_ssh_extra_args: -o StrictHostKeyChecking=no

nms_start_retry: 10
nms_start_delay: 30
nginx_worker_processes: auto
nginx_worker_connections: 1024
docker_internal_network: fd00:420:69::/48
swarm_manager_port: 2377
docker_registry_url: https://secure.cxl-terragraph.com:443/v2
docker_registry_username: tgdeploy
docker_registry_password: 4l5C46xVJ0h74OmRWPK5
keycloak_enabled: false
keycloak_root_user: root
keycloak_root_password: 7I*xUF9PGpI5W*ig
keycloak_db_user: keycloak
keycloak_db_password: 8^ib0L5lvSF9gC5a
db_host: db
db_root_user: root
db_root_password: 12345
gluster_bricks: bricks
gluster_mount: gfs
glusterfs_ppa_version: 4.1
glusterfs_gpg_key_version: 4.1
kafka_log_retention_bytes: 1073741824
E2E_CONFIG_FILE: cfg/controller_config.json
E2E_TOPOLOGY_FILE: e2e_topology.conf
API_ARGS: null
NMS_CONFIG_FILE: cfg/aggregator_config.json
stats_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/stats'
db_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/database'
logs_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/logs'
prometheus_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/prometheus'
nms_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/nms'
e2e_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/e2e'
chihaya_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/chihaya'
alarms_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/alarms'
keycloak_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/keycloak'
docker_proxy_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/docker_proxy'
ssh_keys_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/secrets'
efk_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/efk'
audit_logs_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/audit_logs'
msa_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/msa'
monitoring_gfs_path: '{{ terragraph_docker_path }}/{{ gluster_mount }}/monitoring'
logs_data_path: '{{ terragraph_docker_path }}/logs'
prometheus_data_path: '{{ terragraph_docker_path }}/prometheus_data'
db_data_path: '{{ terragraph_docker_path }}/database_data'
kafka_path: '{{ terragraph_docker_path }}/kafka'
zookeeper_path: '{{ terragraph_docker_path }}/zookeeper'
es_path: '{{ terragraph_docker_path }}/es'
udp_pinger_path: '{{ terragraph_docker_path }}/udp_pinger'
