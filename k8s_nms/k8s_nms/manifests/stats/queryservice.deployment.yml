---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stats-hf-env
data:
  KAFKA_HF_STATS_ENABLED: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: queryservice
spec:
  ports:
  - port: 80
    targetPort: 8086
  selector:
    app: queryservice
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queryservice
spec:
  selector:
    matchLabels:
      app: queryservice
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: queryservice
    spec:
      imagePullSecrets:
        - name: tg-repo-creds
      containers:
      - image: {{ query_service_image }}
        imagePullPolicy: "{{ image_pull_policy }}"
        name: queryservice
        ports:
          - containerPort: 8086
        command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && bin/query_service -http_port 8086 -threads $${HTTP_THREADS} -mysql_url tcp://$${MYSQL_HOST}:3306 -mysql_user $${MYSQL_USER} -mysql_pass $${MYSQL_PASS} {% if keycloak_enabled %} -keycloak_enabled true -keycloak_host $${KEYCLOAK_HOST} -keycloak_realm $${KEYCLOAK_REALM} -keycloak_client_id $${KEYCLOAK_CLIENT_ID} -keycloak_client_secret $${KEYCLOAK_CLIENT_SECRET} {% endif %} -logtostderr -enable_kafka_stats=$${KAFKA_STATS_ENABLED} -kafka_broker_endpoint_list=$${KAFKA_BROKER_LIST} -enable_kafka_hf_stats=$${KAFKA_HF_STATS_ENABLED} -prometheus_cache_uri=$${PROMETHEUS_CACHE_URI}"]
        env:
          - name: PROMETHEUS_CACHE_URI
            value: "http://prometheus-cache:9091/metrics"
        envFrom:
          - configMapRef:
              name: stats-env
          - configMapRef:
              name: stats-hf-env
          - configMapRef:
              name: time-zone
          - configMapRef:
              name: cxl-database
