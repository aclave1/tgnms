version: '3.6'

services:
  ipv6:
    image: secure.cxl-terragraph.com:443/migo:latest
    restart: unless-stopped
    network_mode: "host"
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /lib/modules:/lib/modules:ro

  db:
    image: mysql:5
    env_file:
      - ./env/mysql.env
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    restart: unless-stopped
    volumes:
      - ./mysql_init_scripts:/docker-entrypoint-initdb.d:ro
      - ./docker_volumes/mysql_db:/var/lib/mysql
    networks:
      - terragraph_net
    depends_on:
      - ipv6

  db_log_cleanup:
    build:
      context: .
      dockerfile: Dockerfile.nms
    image: secure.cxl-terragraph.com:443/nms:latest
    env_file:
      - ./env/cleaner.env
      - ./env/mysql.env
      - ./env/time.env
    restart: unless-stopped
    volumes:
      - ./docker_volumes/logs:/logs
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && until nc -z $${MYSQL_HOST} 3306; do sleep 1; done && /usr/src/service/mysql_partitioner/run"]
    depends_on:
      - ipv6
      - db

  nms:
    build:
      context: .
      dockerfile: Dockerfile.nms
    image: secure.cxl-terragraph.com:443/nms:latest
    env_file:
      - ./env/mysql.env
      - ./env/nms.env
      - ./env/time.env
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && until nc -z bqs 8086; do sleep 1; done && npm start"]
    depends_on:
      - ipv6
      - db
      - bqs

  beringei_1s:
    build:
      context: .
      dockerfile: Dockerfile.beringei
    image: secure.cxl-terragraph.com:443/beringei:latest
    env_file:
      - ./env/time.env
    environment:
      - BERINGEI_HOST=beringei
      - PORT=9991
      - NAME=beringei_1s
      - INTERVAL=1
      # -buckets (Number of historical buckets to use)
      - BUCKETS=12
      # -bucket_size (Size of each bucket in seconds)
      - BUCKET_SIZE=300 # 5 minutes
      - BUCKET_FINALIZE_SEC=10
      - ALLOWED_TIMESTAMP_BEHIND=30
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    volumes:
      - ./docker_volumes/beringei:/data
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && beringei/tools/beringei_configuration_generator --file_path $${NAME}.json --host_names $${HOSTNAME} --port $${PORT} && beringei/service/beringei_main -beringei_configuration_path $${NAME}.json -create_directories -sleep_between_bucket_finalization_secs $${BUCKET_FINALIZE_SEC} -allowed_timestamp_behind $${ALLOWED_TIMESTAMP_BEHIND} -bucket_size $${BUCKET_SIZE} -buckets $${BUCKETS} -data_directory=/data/$${NAME} --port $${PORT} -mintimestampdelta=$${INTERVAL} -logtostderr -v=2"]
    depends_on:
      - ipv6

  beringei_30s:
    build:
      context: .
      dockerfile: Dockerfile.beringei
    image: secure.cxl-terragraph.com:443/beringei:latest
    env_file:
      - ./env/time.env
    environment:
      - BERINGEI_HOST=beringei
      - PORT=9992
      - NAME=beringei_30s
      - INTERVAL=30
      - BUCKETS=48
      - BUCKET_SIZE=3600 # one hour
      - BUCKET_FINALIZE_SEC=120
      - ALLOWED_TIMESTAMP_BEHIND=120
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    volumes:
      - ./docker_volumes/beringei:/data
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && beringei/tools/beringei_configuration_generator --file_path $${NAME}.json --host_names $${HOSTNAME} --port $${PORT} && beringei/service/beringei_main -beringei_configuration_path $${NAME}.json -create_directories -sleep_between_bucket_finalization_secs $${BUCKET_FINALIZE_SEC} -allowed_timestamp_behind $${ALLOWED_TIMESTAMP_BEHIND} -bucket_size $${BUCKET_SIZE} -buckets $${BUCKETS} -data_directory=/data/$${NAME} --port $${PORT} -mintimestampdelta=$${INTERVAL} -logtostderr -v=2"]
    depends_on:
      - ipv6

  beringei_900s:
    build:
      context: .
      dockerfile: Dockerfile.beringei
    image: secure.cxl-terragraph.com:443/beringei:latest
    env_file:
      - ./env/time.env
    environment:
      - BERINGEI_HOST=beringei
      - PORT=9993
      - NAME=beringei_900s
      - INTERVAL=900 # 15 mins
      - BUCKETS=90 # 90 days
      - BUCKET_SIZE=86400 # one day
      - BUCKET_FINALIZE_SEC=1200
      - ALLOWED_TIMESTAMP_BEHIND=1200
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    volumes:
      - ./docker_volumes/beringei:/data
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && beringei/tools/beringei_configuration_generator --file_path $${NAME}.json --host_names $${HOSTNAME} --port $${PORT} && beringei/service/beringei_main -beringei_configuration_path $${NAME}.json -create_directories -sleep_between_bucket_finalization_secs $${BUCKET_FINALIZE_SEC} -allowed_timestamp_behind $${ALLOWED_TIMESTAMP_BEHIND} -bucket_size $${BUCKET_SIZE} -buckets $${BUCKETS} -data_directory=/data/$${NAME} --port $${PORT} -mintimestampdelta=$${INTERVAL} -logtostderr -v=2"]
    depends_on:
      - ipv6

  bqs:
    build:
      context: .
      dockerfile: Dockerfile.beringei
    image: secure.cxl-terragraph.com:443/beringei:latest
    env_file:
      - ./env/bqs.env
      - ./env/mysql.env
      - ./env/time.env
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    volumes:
      - ./docker_volumes/logs:/home/nms/data
      - ./mysql_init_scripts:/mysql-scripts
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && until nc -z db 3306; do sleep 1; done && mysql -u$${MYSQL_USER} -p$${MYSQL_PASS} < /mysql-scripts/cxl.sql; until nc -z beringei_30s 9992; do sleep 1; done && beringei/tools/beringei_configuration_generator --file_path beringei_1s.json --host_names beringei_1s --port 9991 && beringei/tools/beringei_configuration_generator --file_path beringei_30s.json --host_names beringei_30s --port 9992 && beringei/tools/beringei_configuration_generator --file_path beringei_900s.json --host_names beringei_900s --port 9993 && beringei/tools/query_service/beringei_query_service -beringei_configuration_path beringei.json -http_port 8086 -threads $${BQS_THREADS} -writer_queue_size 500000 -mysql_url tcp://$${MYSQL_HOST}:3306 -mysql_user $${MYSQL_USER} -mysql_pass $${MYSQL_PASS} -logtostderr"]
    depends_on:
      - ipv6
      - db
      - beringei_1s
      - beringei_30s
      - beringei_900s

  analytics:
    build:
      context: .
    image: secure.cxl-terragraph.com:443/analytics:latest
    env_file:
      - ./env/mysql.env
    restart: unless-stopped
    volumes:
      - ./docker_volumes/logs:/analytics/logs
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "jupyter notebook --no-browser --ip '*' --allow-root --port 8443 --notebook-dir /usr/local/analytics --NotebookApp.token=tokenforterragraphnotebook & cd /usr/local/analytics/link_insights; python3 run_link_pipeline.py"]
    depends_on:
      - ipv6
      - db
      - bqs

  network_test:
    build:
      context: .
    image: secure.cxl-terragraph.com:443/analytics:latest
    env_file:
      - ./env/mysql.env
      - ./env/django.env
    restart: always
    volumes:
      - ./docker_volumes/logs:/analytics/logs
    ports:
      - "8000:8000"
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "cd /usr/local/analytics/network_test_api; until nc -z db 3306; do sleep 1; done && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
    depends_on:
      - ipv6
      - db
      - bqs

networks:
  terragraph_net:
    external: true
