version: '3.6'

services:
  alertmanager:
    image: prom/alertmanager
    env_file:
     - ./env/prometheus.env
    restart: unless-stopped
    ports:
     - 9093
    networks:
     - terragraph_net
    volumes:
     - ./docker_volumes/prometheus/config:/etc/prometheus:ro
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    command: ["--config.file=/etc/prometheus/alertmanager.yml"]
    depends_on:
     - ipv6
     - prometheus

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
     - 8080
    volumes:
     - /:/rootfs:ro
     - /var/run:/var/run:rw
     - /sys:/sys:ro
     - /var/lib/docker/:/var/lib/docker:ro
    networks:
     - terragraph_net
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
     - ipv6

  db:
    image: mysql:5
    env_file:
      - ./env/mysql.env
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    restart: unless-stopped
    volumes:
      - ./mysql_init_scripts:/docker-entrypoint-initdb.d:ro
      - ./docker_volumes/mysql_db:/var/lib/mysql
    networks:
      - terragraph_net
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - ipv6

  db_log_cleanup:
    image: secure.cxl-terragraph.com:443/nms:latest
    env_file:
      - ./env/cleaner.env
      - ./env/mysql.env
      - ./env/time.env
    restart: unless-stopped
    volumes:
      - ./docker_volumes/logs:/logs
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && until nc -z $${MYSQL_HOST} 3306; do sleep 1; done && /usr/src/service/mysql_partitioner/run"]
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - ipv6
      - db

  grafana:
    image: secure.cxl-terragraph.com:443/tgnms-grafana:latest
    env_file:
      - ./env/mysql.env
      - ./env/grafana.env
    environment:
      - GF_DATABASE_TYPE=mysql
      - GF_DATABASE_HOST=db:3306
      - GF_DATABASE_NAME=$${GRAFANA_DB}
      - GF_USERS_DEFAULT_THEME=light
      - GF_SECURITY_ADMIN_PASSWORD=$${GRAFANA_ADMIN_PASS}
      - GF_DATABASE_USER=$${GRAFANA_MYSQL_WRITER}
      - GF_DATABASE_PASSWORD=$${GRAFANA_MYSQL_WRITER_PASS}
      - GF_USERS_AUTO_ASSIGN_ORG_ROLE=Editor
    restart: unless-stopped
    ports:
      - "3000"
    networks:
      - terragraph_net
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - ipv6
      - db

  grafana_util:
    image: secure.cxl-terragraph.com:443/tgnms-grafana:latest
    env_file:
      - ./env/mysql.env
      - ./env/grafana.env
    restart: "no"
    networks:
      - terragraph_net
    entrypoint: ["/bin/sh", "-c", "until nc -z grafana 3000; do sleep 1; done && cd /var/lib/grafana && grafana_cli -d -c grafana -w $${GRAFANA_ADMIN_PASS} import-data-sources --ds_ip db --ds_port 3306 --ds_file mysql_data_source.json --ds_user $${GRAFANA_MYSQL_READER} --ds_passwd $${GRAFANA_MYSQL_READER_PASS}; grafana_cli -d -c grafana -w $${GRAFANA_ADMIN_PASS} import-data-sources --ds_ip prometheus --ds_port 9090 --ds_file prometheus_data_source.json; grafana_cli -d -c grafana -w $${GRAFANA_ADMIN_PASS} add-users; grafana_cli -d -c grafana -w $${GRAFANA_ADMIN_PASS} import-dashboards"]
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - ipv6
      - db
      - grafana

  ipv6:
    image: secure.cxl-terragraph.com:443/migo:latest
    restart: unless-stopped
    network_mode: "host"
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /lib/modules:/lib/modules:ro
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  jupyter:
    image: secure.cxl-terragraph.com:443/jupyter:latest
    restart: unless-stopped
    volumes:
      - ./docker_volumes/tglib/config.json:/usr/local/tglib/jupyter/notebooks/config.json
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "jupyter notebook --ip '0.0.0.0' --port 8888 --no-browser --allow-root --notebook-dir /usr/local/tglib/jupyter/notebooks --NotebookApp.token='' --NotebookApp.base_url=jupyter"]
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - prometheus

  keycloak:
    image: jboss/keycloak:7.0.0
    env_file:
      - ./env/keycloak.env
    volumes:
      - ./docker_volumes/keycloak/realms/tgnms.json:/tmp/tgnms-realm.json
    command: ["-b", "::", "-c=standalone.xml"]
    networks:
      - terragraph_net
    depends_on:
      - ipv6
      - db
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - terragraph_net
    volumes:
      - ./docker_volumes/nginx/certs:/etc/nginx/certs
      - ./docker_volumes/nginx/conf.d:/etc/nginx/conf.d
      - ./docker_volumes/nginx/services.d:/etc/nginx/services.d
      - ./docker_volumes/nginx/html:/usr/share/nginx/html
      - ./docker_volumes/nginx/htpasswd:/etc/nginx/htpasswd
    depends_on:
      - nms
      - grafana
      - prometheus
      - keycloak

  nms:
    image: secure.cxl-terragraph.com:443/nmsv2:stable
    env_file:
      - ./env/mysql.env
      - ./env/nms.env
      - ./env/time.env
      - ./env/nms_auth.env
    restart: unless-stopped
    volumes:
      - ./docker_volumes/logs:/nodelogs
      - ./docker_volumes/locales:/locales
    ports:
      - "80"
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "ln -sf $${TZ_FILE} /etc/localtime && cd /app/fbcnms-projects/tgnms && yarn run start"]
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - ipv6
      - db

  prometheus:
    image: prom/prometheus
    env_file:
     - ./env/prometheus.env
    restart: unless-stopped
    ports:
     - "9090"
    networks:
     - terragraph_net
    volumes:
     - ./docker_volumes/prometheus/config:/etc/prometheus
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    command: ["--config.file=/etc/prometheus/prometheus.yml",
              "--storage.tsdb.path=/prometheus",
              "--web.console.libraries=/usr/share/prometheus/console_libraries",
              "--web.console.templates=/usr/share/prometheus/consoles",
              "--web.external-url=https://prometheus/prometheus/",
              "--web.route-prefix=/",
              "--web.enable-lifecycle"]
    depends_on:
      - ipv6
      - cadvisor

  prometheus_config_manager:
    image: secure.cxl-terragraph.com:443/prometheus_config_manager:latest
    env_file:
     - ./env/prometheus.env
     - ./env/prom_config_manager.env
    restart: unless-stopped
    ports:
     - 9100
     - 9101
    networks:
     - terragraph_net
    volumes:
     - ./docker_volumes/prometheus/config:/etc/configs
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
     - ipv6
     - prometheus

  udp_ping_client:
    image: secure.cxl-terragraph.com:443/cpp_backends:latest
    env_file:
      - ./env/mysql.env
    restart: unless-stopped
    ports:
      - "31338:31338/udp"
    networks:
      - terragraph_net
    command: ["/bin/sh", "-c", "until nc -z db 3306; do sleep 1; done && bin/udp_ping_client -logtostderr -mysql_url tcp://$${MYSQL_HOST}:3306 -mysql_user $${MYSQL_USER} -mysql_pass $${MYSQL_PASS}"]
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    depends_on:
      - ipv6
      - db

networks:
  terragraph_net:
    external: true
