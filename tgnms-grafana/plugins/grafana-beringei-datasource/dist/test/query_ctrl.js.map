{"version":3,"sources":["../../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","target","keyname","restrictor","beringeisource","type","scale","diff","query","datasource","metricFindQuery","datasourceResult","metricFindNodeNames","Array","rawQuery","panelCtrl","refresh","buildQuery","isNaN","onChangeInternal","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AAEX,sCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,wJACxBD,MADwB,EAChBC,SADgB;;AAG9B,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,iBAA3C;AACA,UAAKA,MAAL,CAAYC,OAAZ,GAAsB,MAAKD,MAAL,CAAYC,OAAZ,IAAuB,gBAA7C;AACA,UAAKD,MAAL,CAAYE,UAAZ,GAAyB,MAAKF,MAAL,CAAYE,UAAZ,IAA0B,mBAAnD;AACA,UAAKF,MAAL,CAAYG,cAAZ,GAA6B,MAAKH,MAAL,CAAYG,cAAZ,IAA8B,IAA3D;AACA,UAAKH,MAAL,CAAYI,IAAZ,GAAmB,MAAKJ,MAAL,CAAYI,IAAZ,IAAoB,WAAvC;AACA,UAAKJ,MAAL,CAAYK,KAAZ,GAAoB,MAAKL,MAAL,CAAYK,KAAZ,IAAqB,GAAzC;AACA,UAAKL,MAAL,CAAYM,IAAZ,GAAmB,MAAKN,MAAL,CAAYM,IAAZ,IAAoB,KAAvC;AAV8B;AAW/B;;;;4BAEOC,K,EAAO;AACb,aAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCF,SAAS,EAAzC,CAAP;AACD;;;mCAEcA,K,EAAO;AACpB,UAAMG,mBAAmB,KAAKF,UAAL,CAAgBG,mBAAhB,CAAoCJ,SAAS,EAA7C,CAAzB;AACA,aAAOG,gBAAP;AACD;;;wCAEmB;AAClB,aAAO,IAAIE,KAAJ,CAAU,EAAC,QAAO,CAAR,EAAW,SAAQ,CAAnB,EAAV,EACJ,EAAC,QAAO,EAAR,EAAY,SAAQ,EAApB,EADI,EACoB,EAAC,QAAO,GAAR,EAAa,SAAQ,GAArB,EADpB,CAAP;AAED;;;uCAEkB;AACjB,WAAKZ,MAAL,CAAYa,QAAZ,GAAuB,CAAC,KAAKb,MAAL,CAAYa,QAApC;AACD;;;uCAEkB;AACjB,WAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;yCAEoB;AACnB,WAAKP,UAAL,CAAgBQ,UAAhB,CAA2BT,KAA3B,EAAkC,KAAKP,MAAvC;AACD;;;oCAEe;AACd;AACA,UAAI,CAACiB,MAAM,KAAKjB,MAAL,CAAYK,KAAlB,CAAL,EAA+B;AAC7B,aAAKa,gBAAL;AACD;AACF;;;;EA9C6CC,c;;AAiDhDvB,2BAA2BwB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector)  {\n    super($scope, $injector);\n\n    this.scope = $scope;\n    this.target.target = this.target.target || 'enter raw query';\n    this.target.keyname = this.target.keyname || 'select keyname';\n    this.target.restrictor = this.target.restrictor || 'select restrictor';\n    this.target.beringeisource = this.target.beringeisource || \"30\";\n    this.target.type = this.target.type || 'timeserie';\n    this.target.scale = this.target.scale || 1.0;\n    this.target.diff = this.target.diff || false;\n  }\n\n  getKeys(query) {\n    return this.datasource.metricFindQuery(query || '');\n  }\n\n  getRestrictors(query) {\n    const datasourceResult = this.datasource.metricFindNodeNames(query || '');\n    return datasourceResult;\n  }\n\n  getBeringeiSource() {\n    return new Array({\"text\":1, \"value\":1},\n       {\"text\":30, \"value\":30},{\"text\":900, \"value\":900});\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  onChangeQueryStats() {\n    this.datasource.buildQuery(query, this.target);\n  }\n\n  onScaleChange() {\n    // Refresh panel if scale has changed to valid number\n    if (!isNaN(this.target.scale)) {\n      this.onChangeInternal();\n    }\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}