{"version":3,"sources":["../src/datasource.js"],"names":["dateMath","_","TYPEAHEADTYPE","RESTRICTORTYPE","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","withCredentials","headers","keyname_options_map","Map","editor_options_fallback_map","set","basicAuth","length","options","timeFilter","rangeRaw","from","getBeringeiTime","until","to","fromIsAbsolute","toString","endsWith","minAgo","Math","round","Date","now","parseInt","split","startTsSec","endTsSec","date","roundUp","isString","parts","exec","amount","unit","parse","valueOf","targets","filter","target","rawQuery","getTimeFilter","map","retObject","Object","refId","targetnew","JSON","replace","scopedVars","e","console","log","restrictor","keyname","beringeisource","scale","Number","isNaN","diff","get","topologyName","variables","forEach","variable","current","text","keyNames","Array","restrictors","restrictorArray","values","push","rstrcr","trim","restrictorType","dsIntervalSec","query","buildQueryParameters","t","hide","when","data","getAdhocFilters","adhocFilters","i","doRequest","method","then","mapToGrafanaFormat","bind","result","hasOwnProperty","columns","points","get_keyname_from_target","editor_options","datapoints","j","tmp","diff_value","keys","key","includes","response","status","message","title","annotation","annotationQuery","range","datasource","enable","iconColor","searchTerm","typeaheadType","topologyIndex","lastIndexOf","nodeAIndex","nodeAstr","slice","restrictorObj","restrictorResolved","error","interpolated","noDuplicateKeyNames","mapToTextValue","ret","isArray","data1d","concat","shortNameVec","some","d","keyName","shortName","value","keyNameVec","isObject","datasourceRequest","Promise","resolve","reject"],"mappings":"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","file":"datasource.js","sourcesContent":["import * as dateMath from 'app/core/utils/datemath';\nimport _ from \"lodash\";\n\n// from Stats.thrift\nconst TYPEAHEADTYPE = {\"KEYNAME\" : 1, \"NODENAME\" : 3, \"TOPOLOGYNAME\" : 4};\nconst RESTRICTORTYPE = {\"NODE\" : 1, \"LINK\" : 1};\n\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.headers = {'Content-Type': 'application/json'};\n    this.keyname_options_map = new Map();\n    this.editor_options_fallback_map = new Map().set('scale', 1).set('diff', false);\n    if (typeof instanceSettings.basicAuth === 'string' &&\n      instanceSettings.basicAuth.length > 0) {\n      this.headers['Authorization'] = instanceSettings.basicAuth;\n    }\n  }\n\n  getTimeFilter(options) {\n    let timeFilter = {};\n    if (options && options.rangeRaw) {\n      const from = this.getBeringeiTime(options.rangeRaw.from, false);\n      const until = this.getBeringeiTime(options.rangeRaw.to, true);\n      const fromIsAbsolute = from.toString().endsWith('ms');\n\n\n      if (until === 'now()' && !fromIsAbsolute) {\n        timeFilter.minAgo = from;\n      }\n      else if (until === 'now()') {\n        timeFilter.minAgo = Math.round((Date.now() -\n        parseInt(from.split('ms')[0]))/(1000.0 * 60));\n      }\n      else {\n        timeFilter.startTsSec = Math.round(parseInt(from.split('ms')[0])/1000.0);\n        timeFilter.endTsSec = Math.round(parseInt(until.split('ms')[0])/1000.0);\n      }\n    }\n    return timeFilter;\n  }\n\n  getBeringeiTime(date, roundUp) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      const parts = /^now-(\\d+)([d|h|m|s])$/.exec(date);\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        let minAgo = 0;\n        switch (unit) {\n          case 'd':\n            minAgo = amount * 24 * 60;\n            break;\n          case 'h':\n            minAgo = amount * 60;\n            break;\n          case 's':\n            minAgo = Math.round(amount / 60.0);\n            break;\n          case 'm':\n            minAgo = amount;\n            break;\n        }\n        return minAgo;\n      }\n      date = dateMath.parse(date, roundUp);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return ((target.target !== 'enter raw query') && target.rawQuery)\n              || !target.rawQuery;\n    });\n\n    let timeFilter = this.getTimeFilter(options);\n\n    let targets = _.map(options.targets, target => {\n      let retObject = new Object();\n      retObject.target = {};\n      retObject.refId = target.refId;\n      retObject.type = target.type || 'rawquery';\n      if (target.rawQuery) {\n        // a raw query is directly in the form in Stats.thrift::QueryRequest\n        let targetnew = {};\n        try {\n          targetnew = JSON.parse(this.templateSrv.replace(target.target,\n            options.scopedVars, 'regex'));\n        }\n        catch(e) {\n          console.log('Invalid json object');\n          return retObject;\n        }\n        retObject.target = targetnew;\n        return retObject;\n      } else {\n        // put query in the form in Stats.thrift::QueryRequest\n        // \"replace\" command replaces variables with actual value\n        // \"replace\" does not work on numbers or checkboxes - only strings\n        const restrictor = this.templateSrv.replace(target.restrictor,\n          options.scopedVars, 'regex');\n        const keyname = this.templateSrv.replace(target.keyname,\n          options.scopedVars, 'regex');\n        let beringeisource = target.beringeisource;\n        let scale = Number(target.scale);\n        scale = isNaN(scale) ? 1.0 : scale;\n        const diff = target.diff;\n\n        if (!this.editor_options_fallback_map.get('scale')) {\n          this.editor_options_fallback_map.set('scale', scale)\n            .set('diff', diff);\n        }\n\n        const refId = target.refId;\n        this.keyname_options_map.set(\n          keyname, {\"scale\": scale, \"diff\": diff}\n        );\n\n        // build the query\n        let targetnew = {};\n        // topologyName comes from a variable called \"topology\"\n        let topologyName = \"\";\n        this.templateSrv.variables.forEach(variable => {\n          if (variable.name === \"topology\") {\n            topologyName = variable.current.text;\n          }\n        });\n\n        targetnew.topologyName = topologyName;\n        if (keyname && keyname !== 'select keyname' && keyname.length > 0) {\n          targetnew.keyNames = new Array (keyname);\n        } else {\n          return retObject;\n        }\n\n        if (restrictor && restrictor !== 'select restrictor' &&\n            restrictor.length > 0) {\n          // restrictor can be a comma-separated list\n          targetnew.restrictors = new Array();\n          let restrictorArray = restrictor.split(',');\n          let restrictors = new Object();\n          restrictors.values = new Array();\n          restrictorArray.forEach (rstrcr => {\n            restrictors.values.push(rstrcr.trim());\n          });\n          restrictors.restrictorType = RESTRICTORTYPE[\"NODE\"];\n          targetnew.restrictors.push(restrictors);\n        }\n\n        beringeisource = beringeisource || \"30\";\n        targetnew.dsIntervalSec = parseInt(beringeisource);\n        if (timeFilter.minAgo) {\n          targetnew.minAgo = timeFilter.minAgo;\n        }\n        else {\n          targetnew.startTsSec = timeFilter.startTsSec;\n          targetnew.endTsSec = timeFilter.endTsSec;\n        }\n\n        retObject.target = targetnew;\n        return retObject;\n      }\n    });\n\n    options.targets = targets;\n    return options;\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    if (this.templateSrv.getAdhocFilters) { // TODO\n      query.adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n    } else {\n      query.adhocFilters = [];\n    }\n\n    // build single query from multiple queries\n    for (let i = 1; i < query.targets.length; i++) {\n      if (query.targets[0].target.keyNames &&\n        query.targets[i].target.keyNames) {\n        query.targets[0].target.keyNames.\n           push(query.targets[i].target.keyNames[0]);\n      }\n    }\n\n    return this.doRequest({\n      url: this.url + '/stats_query',\n      data: query.targets[0].target,\n      method: 'POST'\n    }).then(this.mapToGrafanaFormat.bind(this));\n  }\n\n  mapToGrafanaFormat(result) {\n    if (!result.data.hasOwnProperty('columns') ||\n        !result.data.hasOwnProperty('points')) {\n      console.log('No columns or points field');\n      return result;\n    }\n    if (result.data.columns.length <= 1) {\n      console.log('Columns field has only one entry');\n      result.data = [];\n      return result;\n    }\n\n    if (result.data.points[0].length !== result.data.columns.length) {\n      console.log('Columns and every element of points same length error');\n      result.data = [];\n    }\n\n    let data = new Array();\n    // start with i = 1, i = 0 is \"time\"\n    // grafana wants: results.data = [{target: \"key1\"},\n    //    {datapoints: [[val,time], [val,time], ...]}, {target: \"key2\"},\n    //    {datapoints: [[val,time], [val,time], ...]}, ...]\n    // BQS returns\n    //  result.data.columns = [\"time\", \"key1\", \"key2\", ...]\n    //  result.data.points = [0:n-1][0] = time\n    //  result.data.points = [0:n-1][1] = key1 data\n    //  ...\n    //  result.data.points = [0:n-1][n] = keyn data\n    for (let i = 1; i < result.data.columns.length; i++) {\n      data.push(new Object());\n      const keyname = this.get_keyname_from_target(result.data.columns[i]);\n      const editor_options = this.keyname_options_map.get(keyname);\n      const scale = editor_options ? editor_options.scale :\n                                this.editor_options_fallback_map.get(\"scale\");\n      const diff = editor_options ? editor_options.diff :\n                                this.editor_options_fallback_map.get(\"diff\");\n      data[i - 1].target = result.data.columns[i];\n      data[i - 1].datapoints = new Array();\n      if (diff) {\n        for (let j = 1; j < result.data.points.length; j++) {\n          let tmp = new Array();\n          let diff_value;\n          if (result.data.points[j][i] === null ||\n              result.data.points[j - 1][i] === null) {\n            diff_value = null;\n          }\n          else {\n            diff_value =\n              (result.data.points[j][i] - result.data.points[j - 1][i]) * scale;\n          }\n          tmp.push(diff_value);\n          tmp.push(result.data.points[j][0]); // unixTime\n          data[i - 1].datapoints.push(tmp);\n        }\n      }\n      else {\n        for (let j = 0; j < result.data.points.length; j++) {\n          let tmp = new Array();\n          tmp.push(result.data.points[j][i] === null ? null :\n                   result.data.points[j][i] * scale);\n          tmp.push(result.data.points[j][0]); // unixTime\n          data[i - 1].datapoints.push(tmp);\n        }\n      }\n    }\n    result.data = data;\n    return result;\n  }\n\n\n  get_keyname_from_target(target) {\n    const keys = this.keyname_options_map.keys();\n    for (var key of keys) {\n      if (target.includes(key)) {\n        return key;\n      }\n    }\n  }\n\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\",\n                 message: \"Data source is working\",\n                 title: \"Success\" };\n      }\n    });\n  }\n\n  annotationQuery(options) {\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n    var annotationQuery = {\n      range: options.range,\n      annotation: {\n        name: options.annotation.name,\n        datasource: options.annotation.datasource,\n        enable: options.annotation.enable,\n        iconColor: options.annotation.iconColor,\n        query: query\n      },\n      rangeRaw: options.rangeRaw\n    };\n\n    return this.doRequest({\n      url: this.url + '/annotations',\n      method: 'POST',\n      data: annotationQuery\n    }).then(result => {\n      return result.data;\n    });\n  }\n\n\n  metricFindQuery(query, restrictor) {\n    // topologyName comes from a variable called \"topology\"\n    let topologyName = \"\";\n    if (this.templateSrv.variables) {\n      this.templateSrv.variables.forEach(variable => {\n        if (variable.name === \"topology\") {\n          topologyName = variable.current.text;\n        }\n      });\n    }\n    if (topologyName.length === 0) {\n      console.log(\"There must set a variable called 'topology'\");\n      return [];\n    }\n\n    let searchTerm = this.templateSrv.replace(query, null, 'regex');\n    let typeaheadType = TYPEAHEADTYPE[\"KEYNAME\"];;\n    let restrictors = [];\n\n    // this is the search from the topology variable\n    if (searchTerm === \"__bqs_topology_query\") {\n      typeaheadType = TYPEAHEADTYPE[\"TOPOLOGYNAME\"];\n    }\n    // A restricted node query is __bqs_noderestrict_[[nodeA]]_[[topology]]\n    // to find only the nodes which are linked to [[nodeA]], a MAC address\n    else if (searchTerm.includes(\"__bqs_noderestrict_\")) {\n      typeaheadType = TYPEAHEADTYPE[\"NODENAME\"];\n      const topologyIndex = searchTerm.lastIndexOf(\"_\");\n      const nodeAIndex = 19;\n      const nodeAstr = searchTerm.slice(nodeAIndex, topologyIndex);\n      const topologyName = searchTerm.slice(topologyIndex + 1);\n      let restrictorObj = {};\n      restrictorObj.values = [];\n      restrictorObj.values.push(nodeAstr);\n      restrictors.push(restrictorObj);\n    }\n    // a node query is __bqs_[[topology]] where topology is a variable\n    else if (searchTerm.includes(\"__bqs_\")) {\n      typeaheadType = TYPEAHEADTYPE[\"NODENAME\"];\n      topologyName = searchTerm.split('__bqs_')[1]; // just topology name\n    }\n    else {\n      // query is a key, not a variable\n      if (typeof(restrictor) === \"string\" && restrictor.length > 0) {\n        typeaheadType = TYPEAHEADTYPE[\"KEYNAME\"];\n          let restrictorResolved =\n              this.templateSrv.replace(restrictor, null, 'regex');\n          let restrictorObj = {};\n          restrictorObj.restrictorType = RESTRICTORTYPE[\"NODE\"];\n          restrictorObj.values = [];\n          restrictorObj.values.push(restrictorResolved);\n          restrictors.push(restrictorObj);\n      }\n      else if (restrictor) {\n        console.error(\"Unexpected restrictor type\");\n        console.log(restrictor);\n        return [];\n      }\n    }\n\n    var interpolated = {\n        noDuplicateKeyNames: true,\n        restrictors: restrictors,\n        searchTerm: searchTerm,\n        topologyName: topologyName,\n        typeaheadType: typeaheadType,\n    };\n\n    return this.doRequest({\n      url: this.url + '/stats_typeahead',\n      data: interpolated,\n      method: 'POST',\n    }).then(this.mapToTextValue);\n  }\n\n  metricFindNodeNames(query) {\n    // topologyName comes from a variable called \"topology\"\n    let topologyName = \"\";\n    if (this.templateSrv.variables) {\n      this.templateSrv.variables.forEach(variable => {\n        if (variable.name === \"topology\") {\n          topologyName = variable.current.text;\n        }\n      });\n    }\n    if (topologyName.length === 0) {\n      console.log(\"There must set a variable called 'topology'\");\n      return [];\n    }\n\n    var interpolated = {\n      topologyName: topologyName,\n      typeaheadType: TYPEAHEADTYPE[\"NODENAME\"],\n    };\n\n    let ret = this.doRequest({\n      url: this.url + '/stats_typeahead',\n      data: interpolated,\n      method: 'POST',\n    }).then(this.mapToTextValue);\n    return ret;\n  }\n\n\n  mapToTextValue(result) {\n    if (result && result.data && _.isArray(result.data)) {\n      const data1d = [].concat(...result.data); // flatten\n      let shortNameVec = [];\n      data1d.some(d => {\n        if (d && d.keyName && d.shortName && d.shortName.length > 0) {\n          shortNameVec.push({ text: d.shortName, value: d.shortName });\n          return true;\n        }\n      });\n      let keyNameVec = _.map(data1d, (d, i) => {\n        if (d && d.keyName) {\n          // \"keyName\" is returned by BQS\n          return { text: d.keyName, value: d.keyName };\n        } else if (_.isObject(d)) {\n          // it will never reach this point\n          return { text: d, value: d};\n        }\n        return { text: d, value: d};\n      });\n      return shortNameVec.concat(keyNameVec);\n    }\n    else {\n      return [{ text: \"BQS not responding\", value: \"BQS not responding\"}];\n    }\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  getTagKeys(options) {\n    return new Promise((resolve, reject) => {\n      this.doRequest({\n        url: this.url + '/tag-keys',\n        method: 'POST',\n        data: options\n      }).then(result => {\n        return resolve(result.data);\n      });\n    });\n  }\n\n  getTagValues(options) {\n    return new Promise((resolve, reject) => {\n      this.doRequest({\n        url: this.url + '/tag-values',\n        method: 'POST',\n        data: options\n      }).then(result => {\n        return resolve(result.data);\n      });\n    });\n  }\n\n}\n"]}