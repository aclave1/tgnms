lua_package_path '/usr/local/openresty/lualib/?.lua;;';

server {
    listen [::]:80 ipv6only=off;
    server_name {{ ext_nms_hostname }};
    return 301 https://$host$request_uri;
}

server {
    listen [::]:443 ipv6only=off ssl;
    ssl_certificate /etc/letsencrypt/live/{{ ext_nms_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ ext_nms_hostname }}/privkey.pem;

    # Increase client body size for image uploads
    client_max_body_size 500M;

    location / {
        set $upstream_nms nms;
        proxy_pass          http://$upstream_nms:80;
        proxy_set_header    Host               $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host   $host;
        proxy_set_header    X-Forwarded-Server $host;
        proxy_set_header    X-Forwarded-Port   $server_port;
        proxy_set_header    X-Forwarded-Proto  $scheme;
    }

    location /sysdump {
        autoindex on;
        if ($request_method = GET) {
            root {{ terragraph_docker_path }}/{{ gluster_mount }};
        }
        if ($request_method = POST) {
            set $dirname {{ sysdump_gfs_path }}/;
            content_by_lua_file conf/lua/my_upload.lua;
        }
    }

    location /websockets {
        set $upstream_nms nms;
        proxy_pass          http://$upstream_nms:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ~ ^/grafana/(.*)$ {
        set $upstream_grafana grafana;
        proxy_pass http://$upstream_grafana:3000/$1$is_args$args;

        # pass default login/pass until we've switched to keycloak
        proxy_set_header Authorization "Basic YWRtaW46dGVzdA==";
    }

    location ~ ^/jupyter/(.*)$ {
        set $upstream_jupyter jupyter;
        proxy_pass http://$upstream_jupyter:8888/jupyter/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Origin "";
    }

    location ~ ^/prometheus/(.*)$ {
        set $upstream_prometheus prometheus;
        proxy_pass http://$upstream_prometheus:9090/$1$is_args$args;
    }

    location ~ ^/kibana/(.*)$ {
        set $upstream_kibana kibana;
        proxy_pass http://$upstream_kibana:5601/$1$is_args$args;
    }

    location /auth {
        set $upstream_keycloak keycloak_keycloak;
        proxy_pass http://$upstream_keycloak:8080;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

{% for ctrlr in controllers_list %}
{% set name = ctrlr.name | trim | replace(' ', '_') | lower %}

    location ~ "^/api/{{ ctrlr.name }}/(.*)$" {
        set $upstream_api api_service-{{ name }};
        proxy_pass http://$upstream_api:8080/$1$is_args$args;
    }
{% endfor %}
}

# Chihaya - bittorrent tracker
server {
    listen [::]:6969 ipv6only=off;
    location / {
        set $upstream_chihaya chihaya;
        proxy_pass          http://$upstream_chihaya:6969;
        proxy_set_header    X-Real-IP  $remote_addr;
    }
}

# Elasticsearch
server {
    listen [::]:9200 ipv6only=off;
    location / {
        proxy_set_header Connection keep-alive;
        set $upstream_elasticsearch elasticsearch;
        proxy_pass              http://$upstream_elasticsearch:9200;
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Elasticsearch Exporter
server {
    listen [::]:9108 ipv6only=off;
    location / {
        set $upstream_exporter es_exporter;
        proxy_pass          http://$upstream_exporter:9108;
        proxy_set_header    X-Real-IP  $remote_addr;
    }
}

# Fluentd Exporter
server {
    listen [::]:24231 ipv6only=off;
    location / {
        set $upstream_fluentd fluentd;
        proxy_pass          http://$upstream_fluentd:24231;
        proxy_set_header    X-Real-IP  $remote_addr;
    }
}
