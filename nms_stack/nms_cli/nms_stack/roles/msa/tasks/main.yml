---
- name: create msa paths
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ docker_user }}"
    group: docker
    mode: 0755
  loop:
    - "{{ msa_gfs_path }}/config"
    - "{{ msa_gfs_path }}/scripts"
    - "{{ msa_gfs_path }}/env"

- name: copy msa configs
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ docker_user }}"
    group: docker
    mode: 0644
    force: yes
  loop:
    - { src: "docker-compose.yml", dest: "{{ msa_gfs_path }}" }
    - { src: "config.json", dest: "{{ msa_gfs_path }}/config" }

- name: copy scripts
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ docker_user }}"
    group: docker
    mode: 0755
    force: yes
  loop:
    - { src: "scripts/create_msa_database.sh", dest: "{{ msa_gfs_path }}/scripts"}
    - { src: "scripts/msa.sql", dest: "{{ msa_gfs_path }}/scripts"}

- name: establish services
  include_tasks:
    file: service.yml
  with_items:
    - { name: "default_routes_service", has_database: true }
    - { name: "topology_service", has_database: true }
  loop_control:
    loop_var: service

- name: run compose
  shell: "docker stack deploy -c {{ msa_gfs_path }}/docker-compose.yml --with-registry-auth msa"

- name: clean compose
  file:
    path: "{{ msa_gfs_path }}/docker-compose.yml"
    state: absent
  when: not dev_mode
