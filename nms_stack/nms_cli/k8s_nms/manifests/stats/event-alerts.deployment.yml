---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: "{{ namespace }}"
  name: event-alerts-pv
  labels:
    type: local
spec:
  storageClassName: local
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "{{ gfs_path }}/event-alerts"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: "{{ namespace }}"
  name: event-alerts-pv-claim
spec:
  storageClassName: local
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: "{{ namespace }}"
  name: event-alerts
spec:
  selector:
    app: event-alerts
  ports:
  - protocol: TCP
    port: 80
    targetPort: 40000

---
# Processes node events from kafka and fires alertmanager alerts
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "{{ namespace }}"
  name: event-alerts
spec:
  selector:
    matchLabels:
      app: event-alerts
  template:
    metadata:
      namespace: "{{ namespace }}"
      labels:
        app: event-alerts
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: event-alerts-pv-claim
      imagePullSecrets:
        - name: tg-repo-creds
      containers:
      - image: {{ alarms_image }}
        imagePullPolicy: "{{ image_pull_policy }}"
        name: event-alerts
        args: ["-s", "$(KAFKA_BROKER_LIST)", "--alertmanager-server", "$(ALERTMANAGER_HOST)"]
        volumeMounts:
        - name: data
          mountPath: /usr/src/java
        env:
        - name: ALERTMANAGER_HOST
          value: alertmanager
        - name: KAFKA_BROKER_LIST
          value: PLAINTEXT://kafka:9092
        ports:
          - containerPort: 40000
